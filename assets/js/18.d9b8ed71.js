(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{295:function(t,a,s){"use strict";s.r(a);var n=s(6),e=Object(n.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"最长回文子串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最长回文子串","aria-hidden":"true"}},[t._v("#")]),t._v(" 最长回文子串")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://leetcode-cn.com/problems/longest-palindromic-substring/",target:"_blank",rel:"noopener noreferrer"}},[t._v("5. 最长回文子串"),s("OutboundLink")],1)]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('输入: "babad"\n输出: "bab"\n注意: "aba" 也是一个有效答案。\n')])])]),s("blockquote",[s("p",[t._v("判断是否回文")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Array.prototype.reverse")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("isPalindrome")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reverse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 时间复杂度： O(n)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 空间复杂度： O(n)")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 前后对称指针")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("isPalindrome")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" mid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" mid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 时间复杂度： O(n)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 空间复杂度： O(1)")]),t._v("\n")])])]),s("h4",{attrs:{id:"解一：暴力法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解一：暴力法","aria-hidden":"true"}},[t._v("#")]),t._v(" 解一：暴力法")]),t._v(" "),s("ol",[s("li",[t._v("时间复杂度：O(n^3)")]),t._v(" "),s("li",[t._v("两个 for 循环 * reverse 字符串比较")]),t._v(" "),s("li",[t._v("空间复杂度：O(n)")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("/**\n * @param {string} s\n * @return {string}\n */\nvar longestPalindrome = function(s) {\n    let maxS = '';\n    \n    for (let i = 0; i < s.length; i++) {\n        for (let j = i; j < s.length; j++) {\n            const cur = s.slice(i, j + 1);\n            if (cur.split().reverse().join() !== cur) {\n                break;\n            }            \n            if (cur.length > maxS.length) {\n                maxS = cur;\n            }\n        }\n    }\n    return maxS;\n};\n")])])]),s("blockquote",[s("p",[t._v("不用 reverse，用前后指针")])]),t._v(" "),s("h4",{attrs:{id:"解二：中心扩展算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解二：中心扩展算法","aria-hidden":"true"}},[t._v("#")]),t._v(" 解二：中心扩展算法")]),t._v(" "),s("ol",[s("li",[t._v("O(n^2)")]),t._v(" "),s("li",[t._v("奇数的回文中心 n 个，偶数的回文中心 n - 1 个，即 2n - 1, 乘以 i 扩散就是 O(n^2)")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("/**\n * @param {string} s\n * @return {string}\n */\nvar longestPalindrome = function(s) {\n    let maxSub = '';\n    for (let i = 0; i < s.length; i++) {\n        // 奇数回文 'babad'\n        const oddSpreadLength = Math.min(\n            s.length - 1 - i,\n            i\n        );\n        for (let spread = 0; spread <= oddSpreadLength; spread++) {\n            if (s[i + spread] !== s[i - spread]) {\n                break;\n            }\n            if ((1 + spread * 2) > maxSub.length) {\n                maxSub = s.slice(i - spread, i + spread + 1);\n            }\n        }\n        // 偶数回文 'cbbd'\n        const evenSpreadLength = Math.min(\n            s.length - i,\n            i\n        );\n        for (let spread = 0; spread <= evenSpreadLength; spread++) {\n            if (s[i + 1 + spread] !== s[i - spread]) {\n                break;\n            }\n            if ((2 + spread * 2) > maxSub.length) {\n                maxSub = s.slice(i - spread, i + spread + 2);\n            }\n        }\n    }\n    return maxSub;\n};\n")])])]),s("h4",{attrs:{id:"解三：最长公共子串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解三：最长公共子串","aria-hidden":"true"}},[t._v("#")]),t._v(" 解三：最长公共子串")]),t._v(" "),s("ol",[s("li",[t._v("每个 "),s("code",[t._v("char")]),t._v(" 遍历 一次 ，在 reverse 的 string indexOf")]),t._v(" "),s("li",[t._v("for O(n) * indexOf O(n) = O(n^2)")]),t._v(" "),s("li",[t._v("检查子串的索引与反向子串的原始索引相同")])]),t._v(" "),s("h4",{attrs:{id:"解四：动态规划"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解四：动态规划","aria-hidden":"true"}},[t._v("#")]),t._v(" 解四：动态规划")]),t._v(" "),s("p",[s("img",{attrs:{src:"img.yuweixi.cn/Xnip2019-06-08_12-27-52.png",alt:""}})]),t._v(" "),s("h4",{attrs:{id:"解五：manacher算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解五：manacher算法","aria-hidden":"true"}},[t._v("#")]),t._v(" 解五：Manacher算法")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzIzMTE1ODkyNQ==&mid=2649410225&idx=1&sn=ed045e8edc3c49a436a328e5f0f37a55&chksm=f0b60f53c7c18645b4c04a69ad314723cce94ed56994d6f963c2275a2db8d85f973f15f508e4&mpshare=1&scene=23&srcid=1001JCsBlpxgUWjgixasChNQ#rd",target:"_blank",rel:"noopener noreferrer"}},[t._v("【面试现场】如何找到字符串中的最长回文子串？  | 漫画"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("每个扩散都有意义")])])},[],!1,null,null,null);a.default=e.exports}}]);