(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{292:function(n,t,a){"use strict";a.r(t);var s=a(6),o=Object(s.a)({},function(){var n=this,t=n.$createElement,a=n._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h1",{attrs:{id:"this"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#this","aria-hidden":"true"}},[n._v("#")]),n._v(" this")]),n._v(" "),a("blockquote",[a("p",[n._v("为什么有了作用域，还要有 this")])]),n._v(" "),a("p",[n._v("this 是在"),a("strong",[n._v("函数被调用")]),n._v("时 “注入” 进函数作用域里的。this 相当于函数作用域内増持了一个变量 'this'，跟其他变量是并列关系。 它既不指向函数，不属于函数，又不指向函数的词法作用域就显而易见了。")]),n._v(" "),a("p",[n._v("意义：在"),a("strong",[n._v("函数被调用")]),n._v("时 “注入” 进函数作用域里，可以动态地传进方法里，不同于词法作用域。")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("function foo() {\n\tvar a = 2; // 2. a 和 this 都被 foo 函数作用域持有\n\tthis.bar(); // 3. bar 调用时注入 foo 函数作用域的 this(window)\n}\nfunction bar() {\n\tconsole.log('exec bar..');\n\t// 4. window.a 并不存在\n\tconsole.log('this.a:', this.a );\n}\n// 1. foo 调用时注入 this , 即 global对象, 在浏览器则是window\nfoo(); \n// 5. this 是 foo 函数作用域的一个属性, 不属于 foo\nconsole.log('foo.this: ', foo);\n")])])]),a("p",[n._v("既然 this 函数被调用时注入的，那么寻找 “函数被调用的位置” 就是我们的突破口，"),a("code",[n._v("debugger;")]),n._v(" 或打断点是不错的选择。")]),n._v(" "),a("h2",{attrs:{id:"_1-window-global"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-window-global","aria-hidden":"true"}},[n._v("#")]),n._v(" 1. window/global")]),n._v(" "),a("p",[n._v("上面例子中 foo() 注入的 this，global对象, 在浏览器则是window。(strict 模式下则是 undefined)")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("function foo() {\n    console.log( this.a );\n}\nvar a = 1;\nfoo(); // 1\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("\"use strict\"\nfunction foo() {\n    console.log( this.a ); // TypeError: Cannot read property 'a' of undefined\n}\nvar a = 1;\nfoo();\n")])])]),a("h2",{attrs:{id:"_2-obj-func"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-obj-func","aria-hidden":"true"}},[n._v("#")]),n._v(" 2. [obj].[func]")]),n._v(" "),a("p",[n._v('如果是 [obj].[func] 的形式，只绑定最后一层。存在 "this 丢失"')]),n._v(" "),a("h3",{attrs:{id:"_2-1-obj-func"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-obj-func","aria-hidden":"true"}},[n._v("#")]),n._v(" 2.1 [obj].[func]")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("// 非严格模式\nvar name = 'window';\nfunction foo() {\n    console.log( this.name );\n}\nvar obj = {\n    name: 'obj',\n    foo: foo,\n};\nfoo(); // 'window'\nobj.foo(); // 'obj'\n")])])]),a("h3",{attrs:{id:"_2-2-只绑定最后一层"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-只绑定最后一层","aria-hidden":"true"}},[n._v("#")]),n._v(" 2.2 只绑定最后一层")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("function foo() {\n    console.log( this.name );\n}\nvar obj = {\n    name: 'obj',\n    foo: foo,\n};\n// 只绑定最后一层。\nvar parent = {\n    name: 'parent',\n    obj,\n};\nparent.obj.foo(); // 'obj'\n")])])]),a("h3",{attrs:{id:"_2-3-this-丢失"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-this-丢失","aria-hidden":"true"}},[n._v("#")]),n._v(" 2.3 this 丢失")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("// \"this\" 丢失\nfunction foo() {\n    console.log( this.name );\n}\nvar obj = {\n    name: 'obj',\n    foo: foo,\n};\nvar bar = obj.foo;\nvar name = 'window';\nbar(); // 'window'\n")])])]),a("h2",{attrs:{id:"_3-call-apply"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-call-apply","aria-hidden":"true"}},[n._v("#")]),n._v(" 3. call/apply")]),n._v(" "),a("p",[a("code",[n._v("call/apply")]),n._v(" 来源于 "),a("code",[n._v("Function.prototype.call / Function.prototype.apply")]),n._v("。 因为声明一个 function 相当于 new Function。")]),n._v(" "),a("p",[n._v("[obj].[func] 相当于 call/apply 的语法糖")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("// call 接受的是若干个参数的列表\nfunction foo() {\n    console.log( this.a );\n}\nvar obj = {\n    a:2\n};\nfoo.call( obj ); // 2\n\n// apply 接受一个包含多个参数的数组\nvar numbers = [5, 6, 2, 3, 7];\nvar max = Math.max.apply(null, numbers);\nconsole.log(max); // 7\n")])])]),a("h2",{attrs:{id:"_4-bind"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-bind","aria-hidden":"true"}},[n._v("#")]),n._v(" 4. bind")]),n._v(" "),a("h3",{attrs:{id:"_4-1-强制绑定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-强制绑定","aria-hidden":"true"}},[n._v("#")]),n._v(" 4.1 强制绑定")]),n._v(" "),a("p",[n._v("由于[obj].[func] 存在 this 丢失，call/apply 又是立即执行的。无法强制绑定 this。")]),n._v(" "),a("p",[n._v("强制绑定 this 有两种，一个是外层封住一个函数， 二是 ES5 提供的 bind 函数")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("// 外层封住一个函数\nfunction foo(something) {\n    console.log( this.a, something );\n    return this.a + something;\n}\nvar obj = {\n    a:2\n};\nvar bar = function() {\n    return foo.apply( obj, arguments );\n};\nvar b = bar( 3 ); // 2 3\nconsole.log( b ); // 5\n\n// 模拟 Function.prototype.bind\nfunction bind(fn, obj) {\n    return function() {\n        return fn.apply( obj, arguments );\n    };\n}\n")])])]),a("h3",{attrs:{id:"_4-2-bind"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-bind","aria-hidden":"true"}},[n._v("#")]),n._v(" 4.2 bind")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("function foo(something) {\n    console.log( this.a, something );\n    return this.a + ' ' + something;\n}\nvar obj = {\n    a: 'obj',\n    foo: foo\n};\nvar bar = foo.bind( obj );\nconsole.log( bar('function') ); // obj function\nvar test = obj.foo;\nconsole.log( test('function') );  // undefined function\n")])])]),a("p",[n._v("优先级 bind > call/apply > [obj].[func]")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("const a = 1;\nfunction foo() {\n    console.log( this.a );\n}\nconst obj = {\n    a: 2,\n    foo: foo,\n};\nconst callOther = {\n    a: 'call',\n}\nconst bindOther = {\n    a: 'bind',\n}\n// call/apply 优先级 比 [obj].[func] 高\nobj.foo.call(callOther);\nconst func = foo.bind(bindOther);\nfunc(); // \"bind\"\n// bind 优先级 比 call/apply 高\nfunc.call(callOther); // \"bind\"\n")])])]),a("p",[n._v("bind 实际上是 call/apply 的语法糖")]),n._v(" "),a("h2",{attrs:{id:"_5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5","aria-hidden":"true"}},[n._v("#")]),n._v(" 5. () => {}")]),n._v(" "),a("p",[n._v("箭头函数的this是在定义函数时绑定的，不是在执行过程中绑定的。简单的说，函数在定义时，this就继承了定义函数的对象。")]),n._v(" "),a("ul",[a("li",[n._v("使用 ES6 箭头函数")])]),n._v(" "),a("p",[a("img",{attrs:{src:"http://note.youdao.com/yws/res/11186/071AE52CA85E4271AF8D19E846021AC7",alt:"image"}})]),n._v(" "),a("ul",[a("li",[n._v("如果不用 ES6 的箭头函数")])]),n._v(" "),a("p",[a("img",{attrs:{src:"http://note.youdao.com/yws/res/11188/8760D7097C834280895FB35C0A7590DE",alt:"image"}})]),n._v(" "),a("h2",{attrs:{id:"_6-原型链-new"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-原型链-new","aria-hidden":"true"}},[n._v("#")]),n._v(" 6. 原型链 - new")]),n._v(" "),a("h2",{attrs:{id:"_7-数组中-function-的-this"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-数组中-function-的-this","aria-hidden":"true"}},[n._v("#")]),n._v(" 7. 数组中 function 的 this")]),n._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 考察静态作用域 + this 默认是 window")]),n._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("var")]),n._v(" value "),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[n._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("function")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[n._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[n._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("function")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[n._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("var")]),n._v(" value "),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[n._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[n._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[n._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 100")]),n._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 数组中 function 的 this")]),n._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("var")]),n._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("[")]),n._v("fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("value "),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[n._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[n._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 1000")]),n._v("\n")])])]),a("ul",[a("li",[n._v("真题")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("var length = 10;\nfunction fn(){\n    console.log(this.length);\n}\nvar obj = {\n    length: 5,\n    method: function (fn1) {\n        arguments[0]();     }\n};\nobj.method(fn, 123);\n")])])])])},[],!1,null,null,null);t.default=o.exports}}]);